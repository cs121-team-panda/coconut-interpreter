version: 2
jobs:
  backend:
    docker:
      - image: circleci/python:3.6.2
        environment:
          FLASK_CONFIG: testing
    steps:
      - checkout
      - run: mkdir test-reports
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt 
      - run:
          name: setup Heroku
          command: bash .circleci/setup-heroku.sh
      - save_cache:
          key: deps-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          command: |
            set -e
            . venv/bin/activate
            python manage.py test
      - store_artifacts:
          path: test-reports/
          destination: tr1
      - store_test_results:
          path: test-reports/
      - deploy:
          name: Deploy Master to Heroku
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              git push heroku master
              heroku restart
            fi
  frontend:
    docker:
      - image: circleci/node:8.9.4
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "client/package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          command: yarn install
          working_directory: client
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "client/package.json" }}
      # Check eslint, flow
      - run:
          command: yarn check-all
          working_directory: client
      # run tests!
      - run:
          command: yarn test
          working_directory: client
workflows:
  version: 2
  backend_and_frontend:
    jobs:
      - backend
      - frontend

version: 2
jobs:
  test_backend:
    docker:
      - image: circleci/python:3.6.2
        environment:
          FLASK_CONFIG: testing
    steps:
      - checkout
      - run: mkdir test-reports
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt 
      - save_cache:
          key: deps-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          command: |
            set -e
            . venv/bin/activate
            python manage.py test
      - store_artifacts:
          path: test-reports/
          destination: tr1
      - store_test_results:
          path: test-reports/
  test_frontend:
    docker:
      - image: circleci/node:8.9.4
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "client/package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          command: yarn install
          working_directory: client
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "client/package.json" }}
      # Check eslint, flow
      - run:
          command: yarn check-all
          working_directory: client
      # run tests!
      - run:
          command: yarn test
          working_directory: client
  deploy_backend:
    docker:
      - image: circleci/python:3.6.2
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: deps-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          command: |
            set -e
            LATEST_COMMIT=$(git rev-parse HEAD)
            APP_COMMIT=$(git log -1 --format=format:%H --full-diff app)
            if [ $APP_COMMIT = $LATEST_COMMIT ]; then
              . venv/bin/activate
              zappa unschedule production
              zappa update production
            fi
  deploy_frontend:
    docker:
      - image: circleci/node:8.9.4
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "client/package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          command: yarn install
          working_directory: client
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "client/package.json" }}
      - run:
          command: |
            set -e
            LATEST_COMMIT=$(git rev-parse HEAD)
            CLIENT_COMMIT=$(git log -1 --format=format:%H --full-diff client)
            if [ $CLIENT_COMMIT = $LATEST_COMMIT ]; then
              cd client && yarn build && cd ..
              .circleci/deploy-ghpages.sh client/build
            fi
workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test_backend
      - test_frontend
      - deploy_backend:
          requires:
            - test_backend
          filters:
            branches:
              only:
                master
      - deploy_frontend:
          requires:
            - test_frontend
          filters:
            branches:
              only:
                master
